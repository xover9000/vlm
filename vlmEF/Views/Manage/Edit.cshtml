@using vlmEF.Controllers
@model vlmEF.User

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Edit", "Manage", FormMethod.Post)) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>User</legend>

        @Html.HiddenFor(model => model.UserId)

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName, "User Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EmailAddress, "Email Address")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EmailAddress)
            @Html.ValidationMessageFor(model => model.EmailAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PhoneNumber, "Phone Number")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PhoneNumber)
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>
        @if (User.IsInRole("SuperAdmin"))
        {
        <div class="editor-label">
            @Html.LabelFor(model => model.Role)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(x => x.RoleId, (IEnumerable<SelectListItem>)ViewBag.RoleOptions)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Company)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(x => x.CompanyId, (IEnumerable<SelectListItem>)ViewBag.CompanyOptions)
        </div>        
        }
        <div class="editor-label">
            @Html.LabelFor(model => model.SubscriptionStart)
        </div>
        <div class="editor-field">
            <input type="date" name="SubscriptionStart" value="@(Model.SubscriptionStart.HasValue ? Model.SubscriptionStart.Value.ToString("yyyy-MM-dd") : "")" />
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.SubscriptionEnd)
        </div>
        <div class="editor-field">
            <input type="date" name="SubscriptionEnd" value="@(Model.SubscriptionEnd.HasValue ? Model.SubscriptionEnd.Value.ToString("yyyy-MM-dd") : "")" />
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Disabled)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Disabled)
        </div>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
